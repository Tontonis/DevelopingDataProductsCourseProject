library(shiny)
library(miniUI)
myFirstGadget <- function() {
ui <- miniPage(
gadgetTitleBar("My First Gadget")
)
server <- function(input, output, session) {
# The Done button closes the app
observeEvent(input$done, {
stopApp()
})
}
runGadget(ui, server)
}
runGadget(ui, server)
myFirstGadget()
multiplyNumbers <- function(numbers1, numbers2) {
ui <- miniPage(
gadgetTitleBar("Multiply Two Numbers"),
miniContentPanel(
selectInput("num1", "First Number", choices=numbers1),
selectInput("num2", "Second Number", choices=numbers2)
)
)
}
server <- function(input, output, session) {
observeEvent(input$done, {
num1 <- as.numeric(input$num1)
num2 <- as.numeric(input$num2)
stopApp(num1 * num2)
})
}
runGadget()
library(shiny)
library(miniUI)
multiplyNumbers <- function(numbers1, numbers2) {
ui <- miniPage(
gadgetTitleBar("Multiply Two Numbers"),
miniContentPanel(
selectInput("num1", "First Number", choices=numbers1),
selectInput("num2", "Second Number", choices=numbers2)
)
)
}
server <- function(input, output, session) {
observeEvent(input$done, {
num1 <- as.numeric(input$num1)
num2 <- as.numeric(input$num2)
stopApp(num1 * num2)
})
}
runGadget()
multiplyNumbers(1:10,1:10)
multiplyNumbers <- function(numbers1, numbers2) {
ui <- miniPage(
gadgetTitleBar("Multiply Two Numbers"),
miniContentPanel(
selectInput("num1", "First Number", choices=numbers1),
selectInput("num2", "Second Number", choices=numbers2)
)
)
}
server <- function(input, output, session) {
observeEvent(input$done, {
num1 <- as.numeric(input$num1)
num2 <- as.numeric(input$num2)
stopApp(num1 * num2)
})
}
multiplyNumbers <- function(numbers1, numbers2) {
ui <- miniPage(
gadgetTitleBar("Multiply Two Numbers"),
miniContentPanel(
selectInput("num1", "First Number", choices=numbers1),
selectInput("num2", "Second Number", choices=numbers2)
)
)
}
server <- function(input, output, session) {
observeEvent(input$done, {
num1 <- as.numeric(input$num1)
num2 <- as.numeric(input$num2)
stopApp(num1 * num2)
})
}
runGadget(ui, server)
multiplyNumbers(1:10,1:10)
pickTrees <- function() {
ui <- miniPage(
gadgetTitleBar("Select Points by Dragging your Mouse"),
miniContentPanel(
plotOutput("plot", height = "100%", brush = "brush")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
plot(trees$Girth, trees$Volume, main = "Trees!",
xlab = "Girth", ylab = "Volume")
})
observeEvent(input$done, {
stopApp(brushedPoints(trees, input$brush,
xvar = "Girth", yvar = "Volume"))
})
}
runGadget(ui, server)
}
pickTrees()
install.packages("googleVis")
suppressPackageStartupMessages(library(googleVis))
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
print(M,"chart")
M
plot(M)
plot(M)
library(googleVis)
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
plot(M)
library(googleVis)
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
plot(N)
plot(M)
install.packages(c("cairoDevice", "caTools", "data.table", "dotCall64", "e1071", "fansi", "forecast", "foreign", "git2r", "haven", "maptools", "mgcv", "openssl", "openxlsx", "quantreg", "Rcpp", "RcppArmadillo", "RCurl", "sourcetools", "sp", "spam", "tseries", "utf8", "XML", "xts", "zoo"))
install.packages("installr")
install.packages(c("stringi", "stringr", "installr"))
install.packages(c("yaml", "installr"))
library(r)
library(installr)
updateR()
install.packages("randomForest")
install.packages("corrplot")
library(corrplot)
rquer   library(ggplot2);
library(caret);
library(caretEnsemble);
library(rpart)
library(randomForest)
library(corrplot)
trainingFile <- "./pml-training.csv"
testingFile <- "./pml-testing.csv"
trainingURL<-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
testingURL<-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
if(!file.exists(trainingFile)) {
setInternet2(TRUE);
download.file(trainingURL,trainingFile,method="auto");
}
if(!file.exists(testingFile)) {
setInternet2(TRUE);
download.file(testingURL,testingFile,method="auto");
}
trainingSet <- read.csv(trainingFile);
testingSet <- read.csv(testingFile);
set.seed(7)
nearZeroVarStore<-nearZeroVar(trainingSet,saveMetrics=TRUE)
filtTraining<-trainingSet[,!nearZeroVarStore$nzv]
filtTesting<-testingSet[,!nearZeroVarStore$nzv]
filtTraining<-filtTraining[,grep("accel|classe", names(filtTraining), value=TRUE)]
filtTesting<-filtTesting[,grep("accel", names(filtTesting), value=TRUE)]
nans<-(colSums(is.na(filtTraining))==0)
filtTraining<-filtTraining[,nans]
nans<-(colSums(is.na(filtTesting))==0)
filtTesting<-filtTesting[,nans]
nearZeroVarStore<-nearZeroVar(trainingSet,saveMetrics=TRUE)
filtTraining<-trainingSet[,!nearZeroVarStore$nzv]
filtTesting<-testingSet[,!nearZeroVarStore$nzv]
filtTraining<-filtTraining[,grep("accel|classe", names(filtTraining), value=TRUE)]
filtTesting<-filtTesting[,grep("accel", names(filtTesting), value=TRUE)]
nans<-(colSums(is.na(filtTraining))==0)
filtTraining<-filtTraining[,nans]
nans<-(colSums(is.na(filtTesting))==0)
filtTesting<-filtTesting[,nans]
nearZeroVarStore<-nearZeroVar(trainingSet,saveMetrics=TRUE)
filtTraining<-trainingSet[,!nearZeroVarStore$nzv]
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2);
library(caret);
library(caretEnsemble);
library(rpart)
library(randomForest)
library(corrplot)
trainingFile <- "./pml-training.csv"
testingFile <- "./pml-testing.csv"
trainingURL<-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
testingURL<-"https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
if(!file.exists(trainingFile)) {
setInternet2(TRUE);
download.file(trainingURL,trainingFile,method="auto");
}
if(!file.exists(testingFile)) {
setInternet2(TRUE);
download.file(testingURL,testingFile,method="auto");
}
trainingSet <- read.csv(trainingFile);
testingSet <- read.csv(testingFile);
set.seed(7)
nearZeroVarStore<-nearZeroVar(trainingSet,saveMetrics=TRUE)
filtTraining<-trainingSet[,!nearZeroVarStore$nzv]
filtTesting<-testingSet[,!nearZeroVarStore$nzv]
filtTraining<-filtTraining[,grep("accel|classe", names(filtTraining), value=TRUE)]
filtTesting<-filtTesting[,grep("accel", names(filtTesting), value=TRUE)]
nans<-(colSums(is.na(filtTraining))==0)
filtTraining<-filtTraining[,nans]
nans<-(colSums(is.na(filtTesting))==0)
filtTesting<-filtTesting[,nans]
inTrain<-createDataPartition(filtTraining$classe,p=0.70,list=FALSE)
filtTraining<-filtTraining[inTrain,]
filtValidation<-filtTraining[-inTrain,]
limitedValues<-filtTraining[:,0:-1]
limitedValues<-filtTraining[,0:-1]
View(limitedValues)
View(limitedValues)
limitedValues<-filtTraining[,1:-end]
limitedValues<-filtTraining[,1:end]
limitedValues<-filtTraining[,1:-0]
limitedValues<-filtTraining[,1:17]
limitedValues<-filtTraining[,1:16]
View(limitedValues)
View(limitedValues)
corrTraining<-cor(filtTraining[,1:16])
corrplot(corrTraining,type="full", order="hclust",tl.cl="black",tl.srt=45)
subset<-data.frame(dataRaw$termstart, dataRaw$age, dataRaw$party, dataRaw$congress, dataRaw$chamber, dataRaw$state)
library(plotly)
dataRaw<-read.csv2("./congress-age/congress-terms.csv", header=TRUE,sep=",")
subset<-data.frame(dataRaw$termstart, dataRaw$age, dataRaw$party, dataRaw$congress, dataRaw$chamber, dataRaw$state)
View(subset)
View(subset)
names(subset)<-c("termstart","age","party","congress","chamber","state");
subset %>%
group_by(congross) %>%
summarize(meanAge=mean(age))
names(subset)<-c("termstart","age","party","congress","chamber","state");
subset %>%
group_by(congeoss) %>%
summarize(meanAge=mean(age))
subset %>%
group_by(congress) %>%
summarize(meanAge=mean(age))
subset %>%
group_by(congress) %>%
summarise(meanAge=mean(age))
View(subset)
View(subset)
subset<-data.frame(dataRaw$termstart, as.numeric(dataRaw$age), dataRaw$party, as.numeric(dataRaw$congress), dataRaw$chamber, dataRaw$state);
names(subset)<-c("termstart","age","party","congress","chamber","state");
subset %>%
group_by(congress) %>%
summarise(meanAge=mean(age))
subset %>%
group_by(congress) %>%
summarise(meanAge=median(age))
View(dataRaw)
View(dataRaw)
subset %>%
group_by(party) %>%
summarise(meanAge=median(age))
subset %>%
group_by(chamber) %>%
summarise(meanAge=median(age))
subset<-data.frame(dataRaw$termstart, double(dataRaw$age), dataRaw$party, as.numeric(dataRaw$congress), dataRaw$chamber, dataRaw$state);
subset<-data.frame(dataRaw$termstart, as.double(dataRaw$age), dataRaw$party, as.numeric(dataRaw$congress), dataRaw$chamber, dataRaw$state);
names(subset)<-c("termstart","age","party","congress","chamber","state");
subset %>%
group_by(chamber) %>%
summarise(meanAge=median(age))
subset<-data.frame(dataRaw$termstart, as.double(dataRaw$age), dataRaw$party, as.double(dataRaw$congress), dataRaw$chamber, dataRaw$state);
names(subset)<-c("termstart","age","party","congress","chamber","state");
subset %>%
group_by(congress) %>%
summarise(meanAge=median(age))
subset %>%
group_by(chamber) %>%
summarise(meanAge=median(age))
subset<-data.frame(dataRaw$termstart, (dataRaw$age), dataRaw$party, (dataRaw$congress), dataRaw$chamber, dataRaw$state);
names(subset)<-c("termstart","age","party","congress","chamber","state");
subset %>%
group_by(chamber) %>%
summarise(meanAge=median(age))
subset<-data.frame(dataRaw$termstart, as.numeric(dataRaw$age), dataRaw$party, as.numeric(dataRaw$congress), dataRaw$chamber, dataRaw$state);
names(subset)<-c("termstart","age","party","congress","chamber","state");
subset %>%
group_by(chamber) %>%
summarise(meanAge=median(age))
dataRaw %>%
group_by(chamber) %>%
summarise(meanAge=median(age))
dataRaw %>%
group_by(chamber) %>%
summarise(meanAge=median(as.numeric(age))
dataRaw %>%
dataRaw<-read.csv2("./congress-age/congress-terms.csv")
dataRaw %>%
group_by(chamber) %>%
summarise(meanAge=median(as.numeric(age)))
dataRaw<-read.csv2("./congress-age/congress-terms.csv",header = TRUE)
dataRaw %>%
group_by(chamber) %>%
summarise(meanAge=median(as.numeric(age)))
dataRaw<-read.csv2("./congress-age/congress-terms.csv",header = TRUE)
dataRaw<-read.csv2("./congress-age/congress-terms.csv",header = TRUE,sep=",")
dataRaw<-read.csv2("./congress-age/congress-terms.csv",header = TRUE,sep=",")
dataRaw %>%
group_by(chamber) %>%
summarise(meanAge=median(as.numeric(age)))
View(dataRaw)
View(dataRaw)
dataRaw %>%
group_by(chamber) %>%
summarise(meanAge=median(age))
dataRaw$age<-as.numeric(dataRaw$age)
dataRaw %>%
group_by(chamber) %>%
summarise(meanAge=median(age))
View(dataRaw)
View(dataRaw)
dataRaw<-read.table("./congress-age/congress-terms.csv",header = TRUE,sep=",")
dataRaw$age<-as.numeric(as.character(dataRaw$age))
dataRaw$congress<-as.numeric(as.character(dataRaw$congress))
dataRaw %>%
group_by(chamber) %>%
summarise(meanAge=median(age))
View(dataRaw)
View(dataRaw)
dataRaw<-read.csv2("./congress-age/congress-terms.csv",header = TRUE,sep=",")
dataRaw$age<-as.numeric(as.character(dataRaw$age))
dataRaw$congress<-as.numeric(as.character(dataRaw$congress))
dataRaw %>%
group_by(chamber) %>%
summarise(meanAge=median(age))
dataRaw[dataRaw$party=="D",] %>%
group_by() %>%
summarise(meanAge=median(age))
dataRaw[dataRaw$party=="D",] %>%
group_by(congress) %>%
summarise(meanAge=median(age))
dataRaw[dataRaw$party=="R",] %>%
group_by(congress) %>%
summarise(meanAge=median(age))
datDem <- data.table(dataRaw[dataRaw$party=="D",] %>%
group_by(congress) %>%
summarise(meanAge=median(age)))
datDem <- data.frame(dataRaw[dataRaw$party=="D",] %>%
group_by(congress) %>%
summarise(meanAge=median(age)))
datRep<-data.frame(dataRaw[dataRaw$party=="R",] %>%
group_by(congress) %>%
summarise(meanAge=median(age)))
View(datDem)
View(datDem)
datDem$sd <- dataRaw[dataRaw$party=="D",] %>%
group_by(congress) %>%
sd(age)
datDem$sd <- dataRaw[dataRaw$party=="D",] %>%
group_by(congress) %>%
sd=sd(age)
datDem$sd <- dataRaw[dataRaw$party=="D",] %>%
group_by(congress) %>%
summarise=sd(age)
datDem$sd <- dataRaw[dataRaw$party=="D",] %>%
group_by(congress) %>%
summarise(sd=sd(age))
datDem <- data.frame(dataRaw[dataRaw$party=="D",] %>%
group_by(congress) %>%
summarise(meanAge=median(age)))
datDem$sd <- dataRaw[dataRaw$party=="D",] %>%
group_by(congress) %>%
summarise(sd=sd(age))
datRep<-data.frame(dataRaw[dataRaw$party=="R",] %>%
group_by(congress) %>%
summarise(meanAge=median(age)))
datRep$sd <- dataRaw[dataRaw$party=="R",] %>%
group_by(congress) %>%
summarise(sd=sd(age))
datDemHouse <- data.frame(dataRaw[dataRaw$party=="D" && dataRaw$chamber =="house",] %>%
group_by(congress) %>%
summarise(meanAge=median(age)))
datDemHouse$sd <- dataRaw[dataRaw$party=="D" && dataRaw$chamber =="house",] %>%
View(dataRaw)
datDemHouse$party<-"D"
datDemHouse$house<-"house"
View(datDemHouse)
View(datDemHouse)
datDemHouse <- data.frame(dataRaw[dataRaw$party=="D" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datDemHouse$sd <- dataRaw[dataRaw$party=="D" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(sd=sd(age))
datDemHouse$party<-"D"
datDemHouse$house<-"house"
datDemSenate <- data.frame(dataRaw[dataRaw$party=="D" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datDemSenate$sd <- dataRaw[dataRaw$party=="D" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(sd=sd(age))
datDemSenate$party<-"D"
datDemSenate$house<-"senate"
datRepHouse<-data.frame(dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datRepHouse$sd <- dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(sd=sd(age))
datRepHouse$party<-"R"
datRepHouse<-data.frame(dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
View(datRep)
View(datRep)
View(dataRaw)
View(dataRaw)
datRepHouse<-data.frame(dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datRepHouse<-data.frame(dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datRepHouse$sd <- dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(sd=sd(age))
datDemSenate <- data.frame(dataRaw[dataRaw$party=="D" && dataRaw$chamber =="senate",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datDemSenate$sd <- dataRaw[dataRaw$party=="D" && dataRaw$chamber =="senate",] %>%
group_by(termstart) %>%
summarise(sd=sd(age))
datDemSenate$party<-"D"
View(dataRaw)
View(dataRaw)
length(dataRaw[dataRaw$chamber=="senate",])
height(dataRaw[dataRaw$chamber=="senate",])
dim(dataRaw[dataRaw$chamber=="senate",])
datRepHouse<-data.frame(dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datRepHouse$sd <- dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(sd=sd(age))
datRepHouse$party<-"R"
dataRaw<-read.csv2("./congress-age/congress-terms.csv",header = TRUE,sep=",")
dataRaw$age<-as.numeric(as.character(dataRaw$age))
dataRaw$congress<-as.numeric(as.character(dataRaw$congress))
datDemHouse <- data.frame(dataRaw[dataRaw$party=="D" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datDemHouse$sd <- dataRaw[dataRaw$party=="D" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(sd=sd(age))
datDemHouse$party<-"D"
datDemHouse$house<-"house"
datDemSenate <- data.frame(dataRaw[dataRaw$party=="D" && dataRaw$chamber =="senate",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datDemSenate$sd <- dataRaw[dataRaw$party=="D" && dataRaw$chamber =="Senate",] %>%
group_by(termstart) %>%
summarise(sd=sd(age))
datDemSenate$party<-"D"
datDemSenate <- data.frame(dataRaw[dataRaw$party=="D" && dataRaw$chamber =="senate",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datRepHouse <- data.frame(dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datRepHouse$sd <- dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(sd=sd(age))
View(datRepHouse)
View(datRepHouse)
datRepHouse <- data.frame(dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datDemHouse <- data.frame(dataRaw[dataRaw$party=="D" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datDemHouse$sd <- dataRaw[dataRaw$party=="D" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(sd(age))
datDemHouse$party<-"D"
datDemHouse$house<-"house"
View(datDemHouse)
View(datDemHouse)
knitr::opts_chunk$set(echo = FALSE)
library(plotly)
library(dplyr)
dataRaw<-read.csv2("./congress-age/congress-terms.csv",header = TRUE,sep=",")
dataRaw$age<-as.numeric(as.character(dataRaw$age))
dataRaw$congress<-as.numeric(as.character(dataRaw$congress))
datDemHouse <- data.frame(dataRaw[dataRaw$party=="D" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datDemHouse$sd <- dataRaw[dataRaw$party=="D" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(sd=sd(age))
datDemHouse$party<-"D"
datDemHouse$house<-"house"
datRepHouse <- data.frame(dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
datRepHouse$sd <- dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(sd=sd(age))
datRepHouse$party<-"R"
datRepHouse <- data.frame(dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",] %>%
group_by(termstart) %>%
summarise(meanAge=median(age)))
data.frame(dataRaw[dataRaw$party=="R" && dataRaw$chamber =="house",])
dataRaw<-read.csv2("./eu_terrorism_fatalities_by_country.csv",header = TRUE,sep=",")
View(dataRaw)
View(dataRaw)
shiny::runApp('F:/DevelopingDataProductsCourseProject/DevelopingDataProductsCoursework')
